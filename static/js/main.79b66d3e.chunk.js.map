{"version":3,"sources":["reportWebVitals.js","Searcher-2-bll/SearchSelector.ts","Searcher-3-dal/api.ts","Searcher-2-bll/SearchReducer.ts","Searcher-1-ui/MainApp/AuthCallback.tsx","Searcher-1-ui/SearchPage/SearchForm.tsx","Searcher-1-ui/Paginator/Paginator.tsx","Searcher-1-ui/SearchPage/PhotosResult.tsx","Searcher-1-ui/SearchPage/SearchPage.tsx","Searcher-2-bll/redux-store.ts","Searcher-1-ui/MainApp/App.tsx","index.tsx","Searcher-1-ui/SearchPage/SearchPage.module.css","Searcher-1-ui/Paginator/Paginator.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","photosSelector","state","search","photos","queriSelector","query","isLoadingSelector","isLoading","currentPageSelector","currentPage","totalPhotosCountSelector","totalPhotosCount","pageSizeSelector","pageSize","orderBySelector","orderBy","colorSelector","colors","isAuthSelector","isAuth","tokenSelector","token","client_id","process","instanse1","axios","create","headers","baseURL","instanse2","api","page","per_page","order_by","color","get","res","data","code","post","initialState","actions","type","id","likes","isLiked","getSearchResult","dispatch","a","results","total","searchReducer","action","map","photo","liked_by_user","AuthCallback","useSelector","useLocation","substr","useDispatch","useEffect","result","status","access_token","getLoginThunk","to","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","searchValidate","values","errors","length","SearchForm","searchPhotos","classes","useState","queryValues","setQueryValues","shift","rememberValue","JSON","parse","localStorage","getItem","initialValues","validate","onSubmit","setSubmitting","oldArray","no_duplicate","filter","item","pos","indexOf","setItem","stringify","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","className","s","inputSerch_error","placeholder","list","name","onChange","onBlur","autocomplete","value","inputSerch","r","selectFormControls","FormControl","InputLabel","htmlFor","Select","native","buttonSearch","Button","variant","disabled","Paginator","onPageChanged","portionSize","pageNumber","Math","ceil","i","push","portionCount","numberPortion","setnumberPortion","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","activePage","e","PhotosResult","currentRage","instanse","Grid","container","direction","justify","alignItems","grid_item_photo","src","urls","small","alt","description","like_area","delete","disLikePhoto","IconButton","aria-label","activeHeart","commonHeart","root","flexGrow","title","searchForm","appBar","backgroundColor","toolbar","SearchPage","AppBar","position","Toolbar","Typography","href","Container","maxWidth","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","AppC","withRouter","exact","path","render","AppContainer","MainApp","basename","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.79b66d3e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AppStateType } from \"./redux-store\"\r\n\r\nexport const photosSelector=(state: AppStateType)=>{\r\n    return state.search.photos\r\n}\r\n\r\nexport const queriSelector=(state: AppStateType)=>{\r\n    return state.search.query\r\n}\r\n\r\nexport const isLoadingSelector=(state: AppStateType)=>{\r\n    return state.search.isLoading\r\n}\r\n\r\nexport const currentPageSelector=(state: AppStateType)=>{\r\n    return state.search.currentPage\r\n}\r\n\r\nexport const totalPhotosCountSelector=(state: AppStateType)=>{\r\n    return state.search.totalPhotosCount\r\n}\r\n\r\nexport const pageSizeSelector=(state: AppStateType)=>{\r\n    return state.search.pageSize\r\n}\r\n\r\nexport const orderBySelector=(state: AppStateType)=>{\r\n    return state.search.orderBy\r\n}\r\n\r\nexport const colorSelector=(state: AppStateType)=>{\r\n    return state.search.colors\r\n}\r\n\r\nexport const isAuthSelector=(state: AppStateType)=>{\r\n    return state.search.isAuth\r\n}\r\n\r\nexport const tokenSelector=(state: AppStateType)=>{\r\n    return state.search.token\r\n}\r\n\r\n","import axios from 'axios';\r\nimport { ColorsType, OrderType } from '../Searcher-2-bll/SearchReducer';\r\n\r\nconst client_id = process.env.REACT_APP_WEATHER_API_KEY\r\nconst client_secret = process.env.REACT_APP_WEATHER_CLIENT_SECRET\r\n\r\nconst redirect_uri='http://localhost:3000/authcallback'\r\nconst grant_type= 'authorization_code'\r\n\r\n\r\nconst instanse1 = axios.create({\r\n  headers: { \"Authorization\": `Client-ID ${client_id}` },\r\n  baseURL: `https://api.unsplash.com/`\r\n})\r\n\r\nconst instanse2 = axios.create({\r\n  headers: { \"Authorization\": \"Bearer ACCESS_TOKEN\" },\r\n  baseURL: `https://unsplash.com/`,\r\n})\r\n\r\n\r\nexport const api = {\r\n  searchPhotos(query: string, page:number, per_page:number, order_by: OrderType, color:null | ColorsType) {\r\n    return instanse1.get(`search/photos?query=${query}&page=${page}&per_page=${per_page}&order_by=${order_by}`+ (color===null ? '':`&color=${color}`))\r\n      .then(res => res.data)\r\n  },\r\n  getAccessToken(code:string){\r\n    return instanse2.post(`oauth/token?client_id=${client_id}&client_secret=${client_secret}&redirect_uri=${redirect_uri}&code=${code}&grant_type=${grant_type}`)\r\n  }\r\n}\r\n\r\n\r\n","import { api } from \"../Searcher-3-dal/api\";\r\nimport { CommonActionsTypes, CommonThunkType } from \"./redux-store\";\r\n\r\nlet initialState = {\r\n    token: null as null | string,\r\n    isAuth: false,\r\n    photos: [] as Array<ResultSearchType>,\r\n    isLoading: false,\r\n    query: '',\r\n    totalPhotosCount: 0,\r\n    pageSize: 36,\r\n    currentPage: 1,\r\n    orderBy: 'relevant' as OrderType,\r\n    colors: null as null | ColorsType,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst searchReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"auth/AUTH_RECEIVED\":\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n\r\n            }\r\n        case \"auth/SET_IS_AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth,\r\n\r\n            }\r\n        case \"search/SET_QUERY\":\r\n            return {\r\n                ...state,\r\n                query: action.query\r\n            }\r\n        case \"search/SET_PHOTOS\":\r\n            return {\r\n                ...state,\r\n                photos: action.photos\r\n            }\r\n\r\n\r\n        case 'search/TOOGLE_IS_LOADING':\r\n            {\r\n                return {\r\n                    ...state, isLoading: action.isLoading\r\n                }\r\n            }\r\n        case 'search/SET_TOTAL_PHOTOS_COUNT':\r\n            {\r\n                return {\r\n                    ...state, totalPhotosCount: action.totalPhotosCount\r\n                }\r\n            }\r\n        case 'searhc/SET_CURRNT_PAGE':\r\n            {\r\n                return {\r\n                    ...state, currentPage: action.currentPage\r\n                }\r\n            }\r\n\r\n        case \"search/CHANGE_LIKES_PHOTO\":\r\n            {\r\n                return {\r\n                    ...state,\r\n                    photos: state.photos.map(photo => {\r\n                        if (photo.id === action.id) {\r\n                            photo.likes = action.likes\r\n                            photo.liked_by_user = action.isLiked\r\n                        }\r\n                        return photo\r\n                    })\r\n                }\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    authReceived: (token: null | string) => ({\r\n        type: 'auth/AUTH_RECEIVED', token\r\n    } as const),\r\n    isAuthChanged: (isAuth: boolean) => ({\r\n        type: 'auth/SET_IS_AUTH', isAuth\r\n    } as const),\r\n    photosReceived: (photos: Array<ResultSearchType>) => ({\r\n        type: 'search/SET_PHOTOS', photos\r\n    } as const),\r\n    queryChanged: (query: string) => ({\r\n        type: 'search/SET_QUERY', query\r\n    } as const),\r\n    toogleIsLoading: (isLoading: boolean) => ({\r\n        type: 'search/TOOGLE_IS_LOADING', isLoading\r\n    } as const),\r\n    totalPhotosCountReceived: (totalPhotosCount: number) => ({\r\n        type: 'search/SET_TOTAL_PHOTOS_COUNT', totalPhotosCount\r\n    } as const),\r\n    currentPageChanged: (currentPage: number) => ({\r\n        type: 'searhc/SET_CURRNT_PAGE', currentPage\r\n    } as const),\r\n    changeLikesPhoto: (id: string, likes: number, isLiked: boolean) => ({\r\n        type: 'search/CHANGE_LIKES_PHOTO', id, likes, isLiked\r\n    } as const),\r\n\r\n\r\n}\r\n\r\ntype ActionsTypes = CommonActionsTypes<typeof actions>\r\ntype ThunkType = CommonThunkType<ActionsTypes>\r\n\r\n\r\nexport const getSearchResult = (query: string, page: number, per_page: number, order_by: OrderType, color: null | ColorsType): ThunkType => {\r\n    return async (dispatch) => {\r\n        actions.toogleIsLoading(true)\r\n        dispatch(actions.queryChanged(query))\r\n        dispatch(actions.currentPageChanged(page))\r\n\r\n        let data = await api.searchPhotos(query, page, per_page, order_by, color)\r\n\r\n        actions.toogleIsLoading(false)\r\n        dispatch(actions.photosReceived(data.results))\r\n\r\n        dispatch(actions.totalPhotosCountReceived(data.total))\r\n    }\r\n}\r\n\r\nexport const getLoginThunk = (code: string): ThunkType => {\r\n    return async (dispatch) => {\r\n        let result = await api.getAccessToken(code)\r\n        if (result.status === 200) {\r\n            dispatch(actions.authReceived(result.data.access_token))\r\n            dispatch(actions.isAuthChanged(true))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default searchReducer;\r\n\r\n\r\n\r\n\r\nexport type OrderType = 'relevant' | 'latest'\r\nexport type ColorsType = 'black_and_white' | 'black' | 'white' | 'yellow' | 'orange' | 'red' | 'purple' | 'magenta' | 'green' | 'teal' | 'blue'\r\n\r\ntype ResultSearchType = {\r\n    id: string,\r\n    created_at: string,\r\n    width: number,\r\n    height: number,\r\n    color: string,\r\n    blur_hash: string,\r\n    likes: number,\r\n    liked_by_user: boolean,\r\n    description: string,\r\n    user: {\r\n        id: string,\r\n        username: string,\r\n        name: string,\r\n        first_name: string,\r\n        last_name: string,\r\n        instagram_username: string,\r\n        twitter_username: string,\r\n        portfolio_url: string,\r\n        profile_image: {\r\n            small: string,\r\n            medium: string,\r\n            large: string\r\n        },\r\n        links: {\r\n            self: string,\r\n            html: string,\r\n            photos: string,\r\n            likes: string\r\n        }\r\n    },\r\n    current_user_collections: [],\r\n    urls: {\r\n        raw: string,\r\n        full: string,\r\n        regular: string,\r\n        small: string,\r\n        thumb: string\r\n    },\r\n    links: {\r\n        self: string,\r\n        html: string,\r\n        download: string\r\n    }\r\n\r\n}","import { Redirect, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { tokenSelector } from '../../Searcher-2-bll/SearchSelector';\r\nimport { getLoginThunk } from '../../Searcher-2-bll/SearchReducer';\r\n\r\n\r\nconst AuthCallback = () => {\r\n    const token = useSelector(tokenSelector)\r\n\r\n    const location = useLocation()\r\n    const code = location.search.substr(6)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getLoginThunk(code))\r\n    }, [])\r\n\r\n    if (token) {\r\n        return <Redirect to='sercher'></Redirect>\r\n    }\r\n\r\n    return (<div>Loading...</div>)\r\n}\r\n\r\nexport default AuthCallback","import { Formik, Form, Field, FormikErrors } from 'formik';\r\nimport s from './SearchPage.module.css'\r\nimport { useState } from 'react';\r\nimport { FormControl, InputLabel, Select, Button } from '@material-ui/core';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { ColorsType, OrderType } from '../../Searcher-2-bll/SearchReducer';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 300,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }),\r\n);\r\n\r\n\r\ntype SearchValuesType = {\r\n    query: string,\r\n    color: null | ColorsType,\r\n    orderBy: OrderType\r\n}\r\n\r\ntype PropsType = {\r\n    searchPhotos: (query: string, orderBy: OrderType, color: null | ColorsType) => void\r\n}\r\n\r\nconst searchValidate = (values: SearchValuesType) => {\r\n\r\n    const errors: FormikErrors<SearchValuesType> = {};\r\n    if (!values.query) {\r\n        errors.query = 'Required - EMPTY SEARCH VALUE';\r\n    } else if (values.query.length > 20) {\r\n        errors.query = 'Please, dont write more then 20 sumbols';\r\n    }\r\n    return errors;\r\n}\r\n\r\nconst SearchForm: React.FC<PropsType> = ({ searchPhotos }) => {\r\n    const classes = useStyles();\r\n    const [queryValues, setQueryValues] = useState([] as Array<string>)\r\n\r\n\r\n    const search = (values: SearchValuesType, { setSubmitting }: any) => {\r\n        searchPhotos(values.query, values.orderBy, values.color)\r\n        setSubmitting(false);\r\n\r\n        setQueryValues(oldArray => [...oldArray, values.query])\r\n\r\n        let no_duplicate = queryValues.filter(function (item: any, pos: any) {\r\n            return queryValues.indexOf(item) === pos;\r\n        })\r\n\r\n        localStorage.setItem('query', JSON.stringify(no_duplicate))\r\n    }\r\n\r\n    if (queryValues.length > 5) {\r\n        queryValues.shift()\r\n    }\r\n\r\n    let rememberValue = JSON.parse(localStorage.getItem('query') as string)\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ query: '', color: null, orderBy: 'relevant' }}\r\n            validate={searchValidate}\r\n            onSubmit={search} >\r\n            {({ values, handleChange, handleBlur, handleSubmit, isSubmitting, isValid, errors }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n                    <div className={s.inputSerch_error}> {errors.query}</div>\r\n                    <Field placeholder='Search...' list=\"query\" type=\"text\" name=\"query\" onChange={handleChange} onBlur={handleBlur} autocomplete=\"off\"\r\n                        value={values.query} className={s.inputSerch} />\r\n\r\n\r\n                    <datalist id='query' >\r\n                        {rememberValue && rememberValue.map((r: any) => <option value={r} />)}\r\n                    </datalist>\r\n                    <div className={s.selectFormControls}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"orderBy\">Sort by order</InputLabel>\r\n                            <Select native id=\"orderBy\" name=\"orderBy\" onChange={handleChange} value={values.orderBy} >\r\n                                <option value=\"relevant\">Relevant</option>\r\n                                <option value=\"latest \">Latest</option>\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"color\">Sort by color</InputLabel>\r\n                            <Select native id=\"color\" name=\"color\" onChange={handleChange} value={values.color} >\r\n                                <option value=\"black_and_white\">black and white</option>\r\n                                <option value=\"black \">black</option>\r\n                                <option value=\"white\">white</option>\r\n                                <option value=\"yellow \">yellow</option>\r\n                                <option value=\"orange\">orange</option>\r\n                                <option value=\"red \">red</option>\r\n                                <option value=\"purple\">purple</option>\r\n                                <option value=\"magenta \">magenta</option>\r\n                                <option value=\"green \">green</option>\r\n                                <option value=\"teal\">teal</option>\r\n                                <option value=\"blue \">blue</option>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className={s.buttonSearch}>\r\n                        <Button variant=\"contained\" color=\"default\" type=\"submit\" disabled={!isValid || isSubmitting}>\r\n                            Search\r\n                        </Button>\r\n                    </div>\r\n\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default SearchForm","import React, { useState } from 'react';\r\nimport s from './Paginator.module.css'\r\nimport cn from \"classnames\"\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\ntype PropsType = {\r\n    totalPhotosCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({ totalPhotosCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n    let pageNumber = Math.ceil(totalPhotosCount / pageSize)\r\n\r\n    let page: Array<number> = [];\r\n\r\n    for (let i = 1; i <= pageNumber; i++) {\r\n        page.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pageNumber / portionSize);\r\n    let [numberPortion, setnumberPortion] = useState(1)\r\n    let leftPortionPageNumber = (numberPortion - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = numberPortion * portionSize;\r\n\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {numberPortion > 1 && <button onClick={() => { setnumberPortion(numberPortion - 1) }}>\r\n                <ArrowBackIosIcon />\r\n            </button>}\r\n            {page\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={cn({\r\n                        [s.activePage]: currentPage === p\r\n                    }, s.pageNumber)}\r\n                        key={p}\r\n                        onClick={(e) => { onPageChanged(p) }}\r\n                    >{p} </span>\r\n                })}\r\n            {numberPortion < portionCount && <button onClick={() => { setnumberPortion(numberPortion + 1) }}>\r\n                <ArrowForwardIosIcon />\r\n            </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import { useDispatch, useSelector } from 'react-redux';\r\nimport s from './SearchPage.module.css'\r\nimport { colorSelector, photosSelector, queriSelector, orderBySelector, tokenSelector, isAuthSelector } from '../../Searcher-2-bll/SearchSelector';\r\nimport axios from 'axios';\r\nimport cn from \"classnames\"\r\nimport { Grid } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { getSearchResult } from '../../Searcher-2-bll/SearchReducer';\r\nimport { actions } from './../../Searcher-2-bll/SearchReducer';\r\nimport Paginator from './../Paginator/Paginator';\r\n\r\ntype PropsType = {\r\n    pageSize: number\r\n    totalPhotosCount: number\r\n    currentRage: number\r\n}\r\n\r\nconst PhotosResult: React.FC<PropsType> = ({ pageSize, totalPhotosCount, currentRage }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const query = useSelector(queriSelector)\r\n    const color = useSelector(colorSelector)\r\n    const orderBy = useSelector(orderBySelector)\r\n    const token = useSelector(tokenSelector)\r\n    const photos = useSelector(photosSelector)\r\n    const isAuth = useSelector(isAuthSelector)\r\n\r\n    const onPageChanged = (currentRage: number) => {\r\n        dispatch(getSearchResult(query, currentRage, pageSize, orderBy, color))\r\n    }\r\n\r\n    const instanse = axios.create({\r\n        headers: { \"Authorization\": `Bearer ${token}` },\r\n        baseURL: `https://api.unsplash.com/`\r\n    })\r\n\r\n    const onLikePhoto = (id: string) => {\r\n        instanse.post(`photos/${id}/like/`)\r\n            .then(res => {\r\n                dispatch(actions.changeLikesPhoto(res.data.photo.id, res.data.photo.likes, res.data.photo.liked_by_user))\r\n            })\r\n    }\r\n\r\n    const disLikePhoto = (id: string) => {\r\n        instanse.delete(`photos/${id}/like/`)\r\n            .then(res => {\r\n                dispatch(actions.changeLikesPhoto(res.data.photo.id, res.data.photo.likes, res.data.photo.liked_by_user))\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalPhotosCount={totalPhotosCount} pageSize={pageSize} currentPage={currentRage} onPageChanged={onPageChanged} />\r\n            <Grid container direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\" spacing={2}>\r\n                {photos && photos.map((p) => <Grid item className={s.grid_item_photo} key={p.id}>\r\n                    <img src={p.urls.small} alt={p.description}></img>\r\n\r\n                    {isAuth && <div className={s.like_area} onClick={() => { !p.liked_by_user ? onLikePhoto(p.id) : disLikePhoto(p.id) }}>\r\n\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                            <FavoriteIcon className={cn({\r\n                                [s.activeHeart]: p.liked_by_user\r\n                            }, s.commonHeart)} />\r\n                        </IconButton>\r\n                        {p.likes}\r\n\r\n                    </div>}\r\n\r\n                </Grid>)}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhotosResult","import { useDispatch, useSelector } from 'react-redux';\r\nimport { ColorsType, getSearchResult, OrderType } from '../../Searcher-2-bll/SearchReducer';\r\nimport SearchForm from './SearchForm'\r\nimport PhotosResult from './PhotosResult';\r\nimport { isLoadingSelector, totalPhotosCountSelector } from '../../Searcher-2-bll/SearchSelector';\r\nimport { currentPageSelector, pageSizeSelector, isAuthSelector } from '../../Searcher-2-bll/SearchSelector';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { Button, AppBar, Toolbar, Typography , Container} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n        searchForm:{\r\n            marginTop: theme.spacing(3)\r\n        },\r\n        appBar:{\r\n            backgroundColor: 'white'\r\n        },\r\n        toolbar:{\r\n            color: 'black'\r\n        }\r\n    }),\r\n);\r\n\r\nconst SearchPage = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const isLoading = useSelector(isLoadingSelector)\r\n    const totalPhotosCount = useSelector(totalPhotosCountSelector)\r\n    const currentRage = useSelector(currentPageSelector)\r\n    const pageSize = useSelector(pageSizeSelector)\r\n    const isAuth = useSelector(isAuthSelector)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const searchPhotos = (query: string, orderBy: OrderType, color: null | ColorsType) => {\r\n        dispatch(getSearchResult(query, 1, pageSize, orderBy, color))\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <div>Is loading...</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <AppBar position=\"static\" className={classes.appBar}>\r\n                <Toolbar className={classes.toolbar}  >\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Searcher Unsplash\r\n                    </Typography>\r\n\r\n                    {!isAuth ? <Button color=\"inherit\" > <a href='https://unsplash.com/oauth/authorize?client_id=-7Zizqlf3Gfd2aWnELKsllUey2-0cIwnZc60S7IKbjw&redirect_uri=http://localhost:3000/authcallback&response_type=code&scope=public+read_user+write_likes'>\r\n                        Login</a>   </Button> :\r\n                        <Button color=\"inherit\">Log out</Button>}\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Container maxWidth='md' className={classes.searchForm}>\r\n                <SearchForm searchPhotos={searchPhotos} />\r\n            </Container>\r\n\r\n            <Container maxWidth='lg'>\r\n                <PhotosResult totalPhotosCount={totalPhotosCount} currentRage={currentRage} pageSize={pageSize} />\r\n            </Container>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage","import { Action, applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\"\r\nimport searchReducer from \"./SearchReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    search: searchReducer,  \r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type CommonActionsTypes<T> = T extends {[key: string]:(...args:any[])=> infer U }?U:never\r\n\r\nexport type CommonThunkType<A extends Action>= ThunkAction<Promise<void>, AppStateType, unknown, A>\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import { BrowserRouter, Route } from \"react-router-dom\";\nimport { Redirect, withRouter } from 'react-router';\nimport { Provider } from \"react-redux\"\nimport AuthCallback from './AuthCallback';\nimport SearchPage from './../SearchPage/SearchPage';\nimport store from '../../Searcher-2-bll/redux-store';\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <Route exact path='/' render={() => <Redirect to={\"/sercher\"} />} />\n      <Route path='/sercher' render={() => <SearchPage />} />\n      <Route path='/authcallback' render={() => <AuthCallback />} />\n    </div>\n  );\n}\n\n\nlet AppC = withRouter(App)\n\nconst AppContainer = () => {\n  return (\n    <AppC />\n  )\n}\n\nlet MainApp: React.FC = () => {\n  return <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n}\n\nexport default MainApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport MainApp from './Searcher-1-ui/MainApp/App';\n\n\nReactDOM.render(\n    <MainApp />,\n  document.getElementById('root')\n);\n\n\nreportWebVitals()","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSerch\":\"SearchPage_inputSerch__jsPxD\",\"inputSerch_error\":\"SearchPage_inputSerch_error__1cdk4\",\"selectFormControls\":\"SearchPage_selectFormControls__26Qdv\",\"buttonSearch\":\"SearchPage_buttonSearch__1FXok\",\"grid_item_photo\":\"SearchPage_grid_item_photo__3wfI_\",\"like_area\":\"SearchPage_like_area__2kMch\",\"activeHeart\":\"SearchPage_activeHeart__3oCCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3P1cJ\",\"pageNumber\":\"Paginator_pageNumber__2O1VT\",\"activePage\":\"Paginator_activePage__2pxDw\"};"],"sourceRoot":""}